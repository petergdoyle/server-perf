<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.cleverfishsoftware.serverperf</groupId>
    <artifactId>server-perf-netty-http</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>
    <dependencies>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-all</artifactId>
            <version>4.1.0.CR1</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>com.cleverfishsoftware.services</groupId>
            <artifactId>server-perf-common</artifactId>
            <version>1.0-SNAPSHOT</version>
            <type>jar</type>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <!-- copy runtime dependencies to shared lib folder -->
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>install</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- 
                usage java -cp .:target/netty-http1-1.0-SNAPSHOT.jar $mainClass $port 
                not an executable jar because mainClass is left out which allows different servers 
                to be spun un from the same jar without rebuilding a jar for each server
                -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <!--
                            <mainClass>test.backend.http.Server</mainClass>
                            -->
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <name>server-perf-netty-http</name>
</project>